{"version":3,"sources":["store/actions/index.js","store/actions/todo.js","components/Input/index.js","components/TodoList/TodoListItem/index.js","utils/index.js","components/TodoList/index.js","components/Footer/index.js","components/Main/index.js","store/reducers/todo.js","store/reducers/index.js","store/store.js","components/Application/App.js","serviceWorker.js","index.js"],"names":["CREATE_TODO","ActionTypes","EDIT_TODO","DELETE_TODO","CHANGE_TODO_STATUS","COMPLETE_ALL","CHANGE_CURRENT_FILTER","CLEAR_COMPLETED_TODOS","React","memo","dispatch","useDispatch","useState","inputState","setInputState","handleFormSubmit","useCallback","e","payload","preventDefault","length","trim","id","nanoid","content","completed","type","handleCompleteAll","className","onClick","onSubmit","placeholder","onChange","target","value","onBlur","onKeyDown","key","props","todoId","todo","isEditable","setEditableStatus","todoState","setTodoState","inputRef","createRef","handleTodoDelete","handleEditFinish","newTodoText","handleCheckboxClick","useLayoutEffect","current","focus","editableTodoText","ref","classname","onDoubleClick","console","log","FILTER_TYPES","ALL","ACTIVE","COMPLETED","FILTER_PREDICATES","el","Object","filter","obj","predicate","keys","reduce","acc","connect","state","todos","filterType","filteredTodos","useMemo","todosForRender","values","map","todosCopy","useSelector","filterTypeHandler","name","clearCompletedHandler","activeTodosCount","filterButtons","toLowerCase","capitalize","Main","initialState","JSON","parse","localStorage","getItem","todoReducer","createReducer","action","newTodoContent","currentTodoStatus","some","forEach","pickBy","combineReducers","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f4507f5a.chunk.js","sourcesContent":["export default {\r\n  CREATE_TODO: \"CREATE_TODO\",\r\n  EDIT_TODO: \"EDIT_TODO\",\r\n  DELETE_TODO: \"DELETE_TODO\",\r\n  CHANGE_TODO_STATUS: \"CHANGE_TODO_STATUS\",\r\n  COMPLETE_ALL: \"COMPLETE_ALL\",\r\n  CHANGE_CURRENT_FILTER: \"CHANGE_CURRENT_FILTER\",\r\n  CLEAR_COMPLETED_TODOS: \"CLEAR_COMPLETED_TODOS\",\r\n};\r\n","import ActionTypes from \"./index\";\r\n\r\nconst {\r\n  CREATE_TODO,\r\n  EDIT_TODO,\r\n  DELETE_TODO,\r\n  CHANGE_TODO_STATUS,\r\n  COMPLETE_ALL,\r\n  CHANGE_CURRENT_FILTER,\r\n  CLEAR_COMPLETED_TODOS,\r\n} = ActionTypes;\r\n\r\nexport const createTodo = (payload) => {\r\n  return { type: CREATE_TODO, payload };\r\n};\r\n\r\nexport const editTodo = (payload) => {\r\n  return { type: EDIT_TODO, payload };\r\n};\r\n\r\nexport const deleteTodo = (payload) => {\r\n  return { type: DELETE_TODO, payload };\r\n};\r\n\r\nexport const changeTodoStatus = (payload) => {\r\n  return { type: CHANGE_TODO_STATUS, payload };\r\n};\r\n\r\nexport const completeAllTodos = () => {\r\n  return { type: COMPLETE_ALL };\r\n};\r\n\r\nexport const changeCurrentFilter = (payload) => {\r\n  return { type: CHANGE_CURRENT_FILTER, payload };\r\n};\r\n\r\nexport const clearCompletedTodos = () => {\r\n  return { type: CLEAR_COMPLETED_TODOS };\r\n};\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createTodo } from \"store/actions/todo\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { completeAllTodos } from \"store/actions/todo\";\r\n\r\nconst Input = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [inputState, setInputState] = React.useState(\"\");\r\n\r\n  const handleFormSubmit = React.useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (inputState.length && inputState.trim().length) {\r\n        dispatch(\r\n          createTodo({\r\n            id: nanoid(),\r\n            content: inputState,\r\n            completed: false,\r\n          })\r\n        );\r\n        setInputState(\"\");\r\n      }\r\n    },\r\n    [dispatch, inputState]\r\n  );\r\n\r\n  const handleCompleteAll = React.useCallback(() => {\r\n    dispatch(completeAllTodos());\r\n  }, [dispatch]);\r\n\r\n  const handleChangeValue = (e) => {\r\n    setInputState(e.target.value);\r\n  };\r\n\r\n  const handleEscPress = (e) => {\r\n    if (e.key === \"Escape\") {\r\n      handleFormSubmit(e);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"todo-form\">\r\n      <button className=\"todo-form__complete-all\" onClick={handleCompleteAll} />\r\n      <form className=\"todo-form__form\" onSubmit={handleFormSubmit}>\r\n        <input\r\n          className=\"todo-form__input\"\r\n          type=\"text\"\r\n          placeholder=\"What you gonna do?\"\r\n          onChange={handleChangeValue}\r\n          onBlur={handleFormSubmit}\r\n          onKeyDown={handleEscPress}\r\n          value={inputState}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Input);\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { editTodo, deleteTodo, changeTodoStatus } from \"store/actions/todo\";\r\n\r\nconst TodoListItem = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const todoId = props.todo.id;\r\n\r\n  const [isEditable, setEditableStatus] = React.useState(false);\r\n\r\n  const [todoState, setTodoState] = React.useState(props.todo.content);\r\n\r\n  const inputRef = React.createRef();\r\n\r\n  const handleDblClick = () => {\r\n    setEditableStatus(true);\r\n  };\r\n\r\n  const handleTodoDelete = React.useCallback(() => {\r\n    dispatch(\r\n      deleteTodo({\r\n        id: todoId,\r\n      })\r\n    );\r\n  }, [dispatch, props.todo]);\r\n\r\n  const handleEditFinish = React.useCallback(() => {\r\n    if (!todoState.length || !todoState.trim().length) {\r\n      handleTodoDelete();\r\n    } else {\r\n      dispatch(\r\n        editTodo({\r\n          id: todoId,\r\n          newTodoText: todoState,\r\n        })\r\n      );\r\n    }\r\n    setEditableStatus(false);\r\n  }, [dispatch, todoState]);\r\n\r\n  const handleKeyPress = (e) => {\r\n    console.log(e);\r\n    if (e.key === \"Enter\" || e.key === \"Escape\") {\r\n      handleEditFinish();\r\n    }\r\n  };\r\n\r\n  const handleCheckboxClick = React.useCallback(() => {\r\n    dispatch(changeTodoStatus({ id: todoId }));\r\n  }, [dispatch, props.todo]);\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [inputRef]);\r\n\r\n  const handleEditValue = (e) => {\r\n    setTodoState(e.target.value);\r\n  };\r\n\r\n  const editableTodoText = (\r\n    <input\r\n      value={todoState}\r\n      ref={inputRef}\r\n      onChange={handleEditValue}\r\n      classname=\"todo__edit\"\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <i\r\n        className={`todo__checkbox ${\r\n          props.todo.completed && \"todo__checkbox_active\"\r\n        }`}\r\n        onClick={handleCheckboxClick}\r\n      ></i>\r\n      <div\r\n        className=\"todo__text\"\r\n        onDoubleClick={handleDblClick}\r\n        onBlur={handleEditFinish}\r\n        onKeyDown={handleKeyPress}\r\n      >\r\n        {isEditable ? editableTodoText : todoState}\r\n      </div>\r\n      <button className=\"todo__delete-button\" onClick={handleTodoDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoListItem);\r\n","export const FILTER_TYPES = {\r\n  ALL: \"ALL\",\r\n  ACTIVE: \"ACTIVE\",\r\n  COMPLETED: \"COMPLETED\",\r\n};\r\n\r\nconst FILTER_PREDICATES = {\r\n  [FILTER_TYPES.ALL]: (el) => el,\r\n  [FILTER_TYPES.ACTIVE]: (el) => !el.completed,\r\n  [FILTER_TYPES.COMPLETED]: (el) => el.completed,\r\n};\r\n\r\nObject.filter = (obj, predicate) =>\r\n  Object.keys(obj).reduce((acc, key) => {\r\n    predicate(obj[key]) && (acc[key] = obj[key]);\r\n    return acc;\r\n  }, {});\r\n\r\nexport const filterTodo = (todos, filterType) =>\r\n  Object.filter(todos, FILTER_PREDICATES[filterType]);\r\n\r\nexport const getLocalStorageTodos = () => {\r\n  return JSON.parse(localStorage.getItem(\"storedTodos\"));\r\n};\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport TodoListItem from \"components/TodoList/TodoListItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterTodo } from \"utils\";\r\n\r\nconst TodoList = (props) => {\r\n  const filteredTodos = React.useMemo(\r\n    () => filterTodo(props.todos, props.filterType),\r\n    [props.todos, props.filterType]\r\n  );\r\n\r\n  const todosForRender = React.useMemo(\r\n    () =>\r\n      Object.values(filteredTodos).map((e) => (\r\n        <TodoListItem todo={e} key={e.id} />\r\n      )),\r\n    [filteredTodos]\r\n  );\r\n\r\n  return <div className=\"todos\">{todosForRender}</div>;\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    todos: state.todo.todos,\r\n    filterType: state.todo.filterType,\r\n  }),\r\n  null\r\n)(React.memo(TodoList));\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeCurrentFilter, clearCompletedTodos } from \"store/actions/todo\";\r\nimport { FILTER_TYPES } from \"utils\";\r\nimport capitalize from \"lodash/capitalize\";\r\n\r\nconst Footer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const todosCopy = useSelector((state) => state.todo.todos);\r\n\r\n  const filterType = useSelector((state) => state.todo.filterType);\r\n\r\n  const filterTypeHandler = React.useCallback(\r\n    (e) => {\r\n      dispatch(changeCurrentFilter({ filterType: e.target.name }));\r\n    },\r\n    [dispatch, filterType]\r\n  );\r\n\r\n  const clearCompletedHandler = React.useCallback(() => {\r\n    dispatch(clearCompletedTodos());\r\n  }, [dispatch]);\r\n\r\n  const activeTodosCount = React.useMemo(\r\n    () => Object.values(todosCopy).filter((todo) => !todo.completed).length,\r\n    [todosCopy]\r\n  );\r\n\r\n  const filterButtons = Object.values(FILTER_TYPES).map((filter) => (\r\n    <button\r\n      name={filter}\r\n      onClick={filterTypeHandler}\r\n      className={`filters__${filter.toLowerCase()} filters__${filter.toLowerCase()}${\r\n        filterType === filter ? `_active` : \"\"\r\n      }`}\r\n    >\r\n      {capitalize(filter)}\r\n    </button>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer__count\">Todos left: {activeTodosCount}</div>\r\n      <div className=\"filters\">{filterButtons}</div>\r\n      <button className=\"footer__clear\" onClick={clearCompletedHandler}>\r\n        Clear completed\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Footer);\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport Input from \"components/Input\";\r\nimport TodoList from \"components/TodoList\";\r\nimport Footer from \"components/Footer\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <>\r\n      <div className=\"main-content\">\r\n        <div className=\"todo-block\">\r\n          <div className=\"todo-block__title\">Todos</div>\r\n          <div className=\"todo-block__content\">\r\n            <Input />\r\n            <TodoList />\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import ActionTypes from \"../actions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport pickBy from \"lodash/pickBy\";\r\nimport { FILTER_TYPES } from \"../../utils\";\r\nimport { getLocalStorageTodos } from \"../../utils\";\r\n\r\nconst initialState = {\r\n  todos: getLocalStorageTodos() || {},\r\n  filterType: FILTER_TYPES.ALL,\r\n};\r\n\r\nconst {\r\n  CREATE_TODO,\r\n  EDIT_TODO,\r\n  DELETE_TODO,\r\n  CHANGE_TODO_STATUS,\r\n  COMPLETE_ALL,\r\n  CHANGE_CURRENT_FILTER,\r\n  CLEAR_COMPLETED_TODOS,\r\n} = ActionTypes;\r\n\r\nexport const todoReducer = createReducer(initialState, {\r\n  [CREATE_TODO]: (state, action) => {\r\n    const { payload } = action;\r\n    const todo = {\r\n      content: payload.content,\r\n      completed: payload.completed,\r\n      id: payload.id,\r\n    };\r\n    state.todos[payload.id] = todo;\r\n  },\r\n\r\n  [EDIT_TODO]: (state, action) => {\r\n    const { payload } = action;\r\n    const newTodoContent = payload.newTodoText;\r\n    state.todos[payload.id].content = newTodoContent;\r\n  },\r\n\r\n  [DELETE_TODO]: (state, action) => {\r\n    const { payload } = action;\r\n    delete state.todos[payload.id];\r\n  },\r\n\r\n  [CHANGE_TODO_STATUS]: (state, action) => {\r\n    const { payload } = action;\r\n    const currentTodoStatus = state.todos[payload.id].completed;\r\n    state.todos[payload.id].completed = !currentTodoStatus;\r\n  },\r\n\r\n  [COMPLETE_ALL]: (state, action) => {\r\n    if (Object.values(state.todos).some((e) => !e.completed)) {\r\n      Object.keys(state.todos).forEach((e) => {\r\n        if (!e.completed) {\r\n          state.todos[e].completed = true;\r\n        }\r\n      });\r\n    } else {\r\n      Object.keys(state.todos).forEach((e) => {\r\n        state.todos[e].completed = !state.todos[e].completed;\r\n      });\r\n    }\r\n  },\r\n\r\n  [CHANGE_CURRENT_FILTER]: (state, action) => {\r\n    const { payload } = action;\r\n    state.filterType = payload.filterType;\r\n  },\r\n\r\n  [CLEAR_COMPLETED_TODOS]: (state, action) => {\r\n    state.todos = pickBy(state.todos, (todo) => !todo.completed);\r\n  },\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { todoReducer } from \"../reducers/todo\";\r\nexport default combineReducers({\r\n  todo: todoReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem(\r\n    \"storedTodos\",\r\n    JSON.stringify(store.getState().todo.todos)\r\n  );\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport Main from \"components/Main\";\nimport { Provider } from \"react-redux\";\nimport store from \"store/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/Application/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}